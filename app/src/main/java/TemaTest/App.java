/*
 * This Java source file was generated by the Gradle 'init' task.
 */


package TemaTest;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

public class App {
    
    public App() {/* compiled code */
    }

    private static String extragerePN(String rowstring) {
            String s = rowstring.replaceAll("'", "");
            return  s.substring(3);
    }

    private static String extrageretext(String rowstring) {
        String s = rowstring.replaceAll("'", "");
        return  s.substring(6);
    }

    private static String extragereId(String rowstring) {
        String s = rowstring.replaceAll("'", "");
        return  s.substring(4);
    }

    public int creatUser(String user, String parola, Utilizator utilizator){
        // verificare user
        if (user != null && parola == null) {
            return 3; // parola nu a fost data
        } else if (user == null) {
            return 4; //userul nu a fost dat
        } else {
            // verificam daca numele si parola utilizatorului exista
            int result = utilizator.verificareUtilizatorExistent(user, parola);
            // daca nu exista il introducem
            if (result == 2) {
                utilizator.setParametriUser(user, parola);
                utilizator.introducInFisier(utilizator);
                return 2;
            } else if(result == 1) {
                return 1;
            }
        }
        return 0;
    }

    public int verificaUserPost(Utilizator utilizator) {
        if(utilizator.userName == null) {
            return 1;
        } else if(utilizator.getParola() == null && utilizator.userName != null) {
            return 1;
        } else if(utilizator.userName != null && utilizator.getParola() != null){
            //verificam daca userul e bun
            int rezultat = utilizator.verificareUtilizatorExistent(utilizator.userName, utilizator.getParola());
            if(rezultat == 1) {
                return 3; //inseamna ca e bun si poate sa inceapa verificarea textului
            } else if(rezultat == 2) {
                return 2;
            }
        }
        return 0; // utilizatorul nu exista are parola sau userul gresit
    }


    public int creatPostareUser(Postare text, Utilizator utilizator) {
        if(text.getTextPostare() == null) {
            //nu s-a primit niciun text
            return 4;
        }
        if(text.verficareLungime()) {
            //postarea e buna
            utilizator.postari.setTextPostare(text.getTextPostare());
            utilizator.postari.introducInFisier(utilizator);
            return 3;
        }
        return 5; //postarea are mai mult de 300 de caractere
    }

    public int verificareid(String id, List<String> lines) {
        // sa pui sau id != null
        if(!lines.isEmpty() && Integer.parseInt(id) <= lines.size()) {
            return 3; // SUCCESC
        } else {
            return 5; // THE IDENTIFIER WAS NOT VALID
        }
    }

    //citeste toate liniile din fisier si le pune intr-o lista de stringuri
    public static List<String> citirefisier() throws IOException{
        List<String> lines = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader("src/main/java/TemaTest/post.csv"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                lines.add(line);
            }
        }
        return lines;
    }

    public static void main(java.lang.String[] strings) {
        //citirea comenzi primite terminal
        String user = null;
        String parola = null;
        Postare text = new Postare();
        String action = null;
        String id = null;

        if(strings == null) {
            System.out.print("Hello world!");
        } else {
            for (int i = 0; i < strings.length; i++) {
                //stergem din fisier tot pentru urmatorul test
                if (strings[i].startsWith("-cleanup-all")) {
                    try {
                        PrintWriter writer = new PrintWriter("src/main/java/TemaTest/test.csv");
                        writer.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }

                    try {
                        PrintWriter writer = new PrintWriter("src/main/java/TemaTest/post.csv");
                        writer.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                action = strings[0];
                if (strings[i].startsWith("-u")) {
                    user = extragerePN(strings[i]);
                } else if (strings[i].startsWith("-p")) {
                    parola = extragerePN(strings[i]);
                } else  if(strings[i].startsWith("-text")) {
                    text.setTextPostare(extrageretext(strings[i]));
                } else if(strings[i].startsWith("-id")) {
                    id = extragereId(strings[i]);
                }
            }

            Utilizator utilizator = new Utilizator(); // o instanta a utilizatorului
            App aplicatie = new App(); // aplicatia noastra
            Outputuri answer = new Outputuri();

            if(action.startsWith("-create-user")) {
                int valoare;
                valoare = aplicatie.creatUser(user, parola, utilizator);
                answer.answerUser(valoare);
            }

            /* verificam daca a primit toti parametrii
             * pe urma verifica daca exista user-ul si pe urma textul*/
            if(action.startsWith("-create-post")){
                // am setat din nou userul deoarece nu va mai intra in sectiunea "-creat-user"
                utilizator.setParametriUser(user,parola);

                //verifica daca utilizatorul e in baza de date
                int rezultat = aplicatie.verificaUserPost(utilizator);

                //daca utilizatorul exista
                if(rezultat == 3) {
                    int rezultatSecund = aplicatie.creatPostareUser(text,utilizator);
                    answer.answerPost(rezultatSecund);
                } else {
                    answer.answerPost(rezultat);
                }

            }

            if(action.startsWith("-delete-post-by-id")){
                utilizator.setParametriUser(user,parola);

                int rezultat = aplicatie.verificaUserPost(utilizator);
                if(rezultat == 3) {
                    // verificam id
                    if(id != null) {
                        /*se citestc din fisier liniile*/
                        List<String> lines;
                        try {
                            lines = citirefisier();
                        } catch (IOException e) {
                            throw new RuntimeException(e);
                        }

                        int rezultatSec = aplicatie.verificareid(id, lines);
                        answer.answerDeletePost(rezultatSec);
                    } else {
                        answer.answerDeletePost(4); //No identifier was provided
                    }
                } else {
                    answer.answerDeletePost(rezultat);
                }
            }
//        System.out.println(strings.toString());

//        try (FileWriter fw = new FileWriter("src/main/java/TemaTest/test.csv", true);
//             BufferedWriter bw = new BufferedWriter(fw);
//             PrintWriter out = new PrintWriter(bw)) {
//            out.print(user + "," + parola+"\n");
//            System.out.println("--->>>Username: " + user +"\nParola: " + parola);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//        System.out.println("Username: " + user +"\nParola: " + parola);



//        //citirea din fisier csv
//        try (BufferedReader br = new BufferedReader(new FileReader("test.csv"))) {
//            String line;
//            String splitBy =",";
//            while ((line = br.readLine()) != null)   //returns a Boolean value
//                {
//                    String[] usernume = line.split(splitBy);
//                    System.out.println("User: " + usernume[0] + "\nparola: " + usernume[1]);
//                }
//        } catch (IOException e)
//        {
//            e.printStackTrace();
//        }
//
//        //scriere in fiser csv
//        try (FileWriter fw = new FileWriter("out.csv", true);
//             BufferedWriter bw = new BufferedWriter(fw);
//             PrintWriter out = new PrintWriter(bw)) {
//
//            out.println(user);
//            out.println(parola);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }

//        //sterge fisierul csv
//        try{
//             Path path = Paths.get("out.csv");

//             Files.deleteIfExists(path);
//
//             System.out.println("Fișierul a fost șters cu succes.");
//        } catch (IOException e) {
//            throw new RuntimeException(e);
//        }

//        System.out.println("Username: " + user +"\nParola: " + parola);
//        try {
//            // Deschide fișierul existent și șterge conținutul
//            PrintWriter writer = new PrintWriter("src/main/java/TemaTest/test.csv");
//            writer.close();
//
//            System.out.println("Fișierul CSV a fost golit cu succes.");
//        } catch (IOException e) {
//            e.printStackTrace();
//        }

        }

    }
}